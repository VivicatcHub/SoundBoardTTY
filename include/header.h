#ifndef HEADER
#define HEADER

////////////////////////////////////////////////////////////
/// INCLUDE
////////////////////////////////////////////////////////////

#include "help_fc.h"
#include <ao/ao.h>
#include <mpg123.h>
#include <ncurses.h>
#include <pthread.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

////////////////////////////////////////////////////////////
/// STRUCTS
////////////////////////////////////////////////////////////

typedef struct {
  char name[100];
  char path[256];
} Sound;

////////////////////////////////////////////////////////////
/// VALUES
////////////////////////////////////////////////////////////

#define MAX_LINES 7
#define MAX_SOUNDS 100
#define BITS 8

extern Sound sounds[MAX_SOUNDS];
extern int sound_count;
extern const char *sounds_file_path;
extern pthread_t play_thread;
extern int stop_playback;

////////////////////////////////////////////////////////////
/// main
////////////////////////////////////////////////////////////

void draw_menu(int highlight);
void draw_submenu(const char *title, Sound *sounds, int num_sounds,
                  int highlight);
void handle_add_sound();
void handle_update_sound();
void handle_delete_sound();
void handle_play_sound();

////////////////////////////////////////////////////////////
/// add
////////////////////////////////////////////////////////////

void handle_add_sound(void);

////////////////////////////////////////////////////////////
/// bd_gestion
////////////////////////////////////////////////////////////

void read_sounds(void);
void write_sounds(void);

////////////////////////////////////////////////////////////
/// delete
////////////////////////////////////////////////////////////

void handle_delete_sound(void);

////////////////////////////////////////////////////////////
/// flag_gestion
////////////////////////////////////////////////////////////

void flag_gestion(char **av);

////////////////////////////////////////////////////////////
/// play
////////////////////////////////////////////////////////////

void handle_play_sound(void);

////////////////////////////////////////////////////////////
/// update
////////////////////////////////////////////////////////////

void handle_update_sound(void);

#endif /* !HEADER */
